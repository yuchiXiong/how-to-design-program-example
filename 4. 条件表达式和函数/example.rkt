#lang racket
;; 习题 4.4.1 设计函数 interest，与 interest-rate 类似，函数的输入为存款额，不同的是，计算结果是实际的年存款收益。假定银行规定存款额小于等于 1000 元，利率为 4%，小于等于 5000 元，利率为 4.5%，大于 5000元利率为 5%。
(define (interest n)
  (cond
    [(<= n 1000) (* n 0.04)]
    [(and (> n 1000) (<= n 5000))
     (* n 0.045)]
    [(> n 5000) (* n 0.05)]))

(interest 1000)

;; 习题 4.4.2 设计函数 tax，输入为雇员的毛收入，输出为应付的税款。税率计算方法如下，毛收入小于等于240 美元的，税率为 0%，毛收入为 241 至 480 美元的，税率为 15%, 毛收入在 480 美元以上的税率为 28%。设计函数 netpay，其按雇员的每周工作时数计算其净收入。净收入为毛收入减去应付的税款。假定工作报酬为每小时 12 美元。
(define (income hours)
  (* hours 12))
(define (tax n)
  (cond
    [(<= n 240) (* n 0)]
    [(and (> n 240) (<= n 480))
     (* n 0.15)]
    [(> n 480) (* n 0.28)]))
(define (netpay hours)
  (- (income hours)
     (tax (income hours))))
(netpay 10)

;; 习题 4.4.3 一些信用卡公司对顾客一年的总消费额会给出一小部分奖赏，其中某一公司的奖赏表为
;;  1． 最初 500 美元消费的奖赏为.25%；
;;  2． 接着的 1000 美元，即 500 美元到 1500 美元，消费的奖励为.50%；
;;  3． 接着的 1000 美元，即 1500 美元到 2500 美元，消费的奖励为.75%；
;;  4． 多于 2500 美元以上的奖励率为 1.0% 。
;; 由此，若一个顾客一年使用信用卡的总消费额为 400 美元，其奖励金就是于 0.25 · 1/100 · 400，即 1 美元，而消费 1400 美元的奖励金为 5.75 美元，其等于前 500 美元消费的奖励金 0.25 · 1/100 · 500＝1.25，加上另外 900 美元的奖励金 0.50 · 1/100 · 900 = 4.50 美元。分别手工计算开销为 2000 美元和 2600 美元时的奖励金。定义函数 pay-back， 输入为一年的消费额，结果为相应的奖励金。
(define (pay_back amount)
  (cond
    [(< amount 500) (* amount 0.0025)]
    [(and (> amount 500)
          (<= amount 1500))
     (+ (* 500 0.0025)
        (* (- amount 500) 0.005))]
    [(and (> amount 1500)
          (<= amount 2500))
     (+ (* 500 0.0025)
        (* 1000 0.005)
        (* (- amount 1500) 0.0075))]
    [(> amount 2500)
     (+ (* 500 0.0025)
        (* 1000 0.005)
        (* 1000 0.0075)
        (* (- amount 2500) 0.01))]))

(pay_back 400)
(pay_back 1400)
(pay_back 2000)
(pay_back 2600)

;; 习题 4.4.4 试编写程序 how-many，输入参数为一个二次方程的系数，即 a、 b 和 c，程序确定解的数目，如
;; (how-many 1 0 -1) = 2
;; (how-many 2 4 2) = 1

(define (delta a b c)
  (- (* b b) (* 4 a c)))
(define (how_many a b c)
  (cond
    [(= (delta a b c) 0) 1]
    [(< (delta a b c) 0) 0]
    [(> (delta a b c) 0) 2]))
(how_many 1 0 -1)
(how_many 1 0 1)
(how_many 1 0 0)